/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Candidate;

import static Election.AddVoter.validate10DigitNumber;
import static Election.AddVoter.validateEmailAddress;
import Login.AdminMenu;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.nio.file.Files;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author BlackDragon
 */
public class AddCandidate extends javax.swing.JFrame {

    /**
     * Creates new form AddCandidate
     */
    int electionlist[],symbol_id,election_id;
    String symbol_path;
    public AddCandidate() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2 - getHeight()/2);
        setTitle("Add candidate");
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/votingsystem", "root", "");
            String quary = "SELECT `ID`,`Name`, `StopTime` FROM `elections`";
            PreparedStatement pst = con.prepareStatement(quary);
            ResultSet res = pst.executeQuery();
            LocalDateTime now = LocalDateTime.now();
            
            elections.removeAllItems();
            electionlist = new int[30];
            int i = 0;
            while(res.next()){
                if(now.isBefore(LocalDateTime.parse(res.getString(3)))){
                    elections.addItem(res.getString(2));
                    electionlist[i] = res.getInt(1);
//                    System.out.println(electionlist[i]);
                    i++;
                }
               
            }
            election_id=electionlist[0];
            con.close();
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Cnd_name = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        elections = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Symbol = new javax.swing.JComboBox<>();
        imageArea = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Nid = new javax.swing.JTextField();
        warn = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 36, -1, -1));
        getContentPane().add(Cnd_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 33, 323, 26));

        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        getContentPane().add(AddBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 510, -1, -1));

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        getContentPane().add(BackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 507, -1, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Election");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 78, -1, -1));

        elections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                electionsActionPerformed(evt);
            }
        });
        getContentPane().add(elections, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 77, 323, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("Symbol");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 118, -1, -1));

        Symbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymbolActionPerformed(evt);
            }
        });
        getContentPane().add(Symbol, new org.netbeans.lib.awtextra.AbsoluteConstraints(94, 117, 323, -1));

        imageArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(imageArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 151, 200, 200));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("Email:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 363, -1, -1));
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 363, 320, 30));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setText("NID:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 422, -1, -1));
        getContentPane().add(Nid, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 417, 320, 30));

        warn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        warn.setForeground(new java.awt.Color(255, 0, 51));
        warn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(warn, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 465, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Candidate/g5.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

     public static boolean validate10DigitNumber(String num) {
    return num.matches("\\d{10}");
}
public static boolean validateEmailAddress(String email) {
    int atIndex = email.indexOf("@");
    int dotIndex = email.lastIndexOf(".");

    if (atIndex < 1 || dotIndex < atIndex + 2 || dotIndex + 2 >= email.length()) {
        return false;
    }

    for (int i = 0; i < email.length(); i++) {
        char c = email.charAt(i);
        if (i == 0 || i == atIndex - 1 || i == atIndex + 1 || i == email.length() - 1) {
            if (!Character.isLetterOrDigit(c)) {
                return false;
            }
        } else {
            if (!Character.isLetterOrDigit(c) && c != '.' && c != '_' && c != '-' && c != '@') {
                return false;
            }
        }
    }

    return true;
}
    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
        if (Cnd_name.getText().isEmpty()||Nid.getText().isEmpty()||Email.getText().isEmpty()){
             warn.setText("Please Fill all field");
        }
        else if(!validate10DigitNumber(Nid.getText())){
            warn.setText("Enter Valid 10 digit NID number");
        }
        else if(!validateEmailAddress(Email.getText())){
            warn.setText("Enter Valid Valid email Adress");
        }
        else {
            warn.setText("");
            String name = Cnd_name.getText();
            String email = Email.getText();
            String nid = Nid.getText();
            String elect = elections.getSelectedItem().toString();
            String symbol = Symbol.getSelectedItem().toString();
//            System.out.println(election_id +"  "+symbol_id);
            try {
                    // Connect to the database
//                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/votingsystem", "root", "");

                    // Insert the image into the database
                    PreparedStatement pst = con.prepareStatement("INSERT INTO `candidate`( `Name`, `nid`, `email`, `election_name`, `election_id`, `symbol_name`, `symbol_id`, `symbol_path`)"
                            + " VALUES (?,?,?,?,?,?,?,?);");
                    pst.setString(1, name);
                    pst.setString(2, nid);
                    pst.setString(3, email);
                    pst.setString(4, elect);
                    pst.setInt(5, election_id);
                    pst.setString(6,symbol);
                    pst.setInt(7, symbol_id);
                    pst.setString(8, symbol_path);
                    
                    int count = pst.executeUpdate();
                    if(count ==1){
                        JOptionPane.showMessageDialog(rootPane, "Candidate has Added successfully");
                       AddCandidate newscreen = new AddCandidate();
                       newscreen.setVisible(true);
                        setVisible(false);

                       
                    
                    }
                    else{
                         JOptionPane.showMessageDialog(rootPane, "Somthing wrong");
                    }   

                    
//                    
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error uploading image: " + ex.getMessage());
                }
        
        
       
        }
    }//GEN-LAST:event_AddBtnActionPerformed

    private void electionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_electionsActionPerformed
        // TODO add your handling code here:
        String selectedElection = elections.getSelectedItem().toString();
        election_id = electionlist[elections.getSelectedIndex()];
        Symbol.removeAllItems();
         try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/votingsystem", "root", "");
            String quary = "SELECT * \n" +
                            "FROM `symbols` \n" +
                            "WHERE name not in (\n" +
                            "	SELECT symbol_name\n" +
                            "    from candidate\n" +
                            "    WHERE election_name = \""+selectedElection+"\");";
            PreparedStatement pst = con.prepareStatement(quary);
            ResultSet res = pst.executeQuery();
          
            
            Symbol.removeAllItems();
            while(res.next()){
                 Symbol.addItem(res.getString(2));
//                System.out.println(res.getString(2));
               
            }
            con.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
            
        }
        
    }//GEN-LAST:event_electionsActionPerformed

    private void SymbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymbolActionPerformed
        // TODO add your handling code here:
        if (Symbol.getSelectedIndex()!= -1){
            try{
               String selctdSymbol = Symbol.getSelectedItem().toString();
               Class.forName("com.mysql.cj.jdbc.Driver");
               Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/votingsystem", "root", "");
               String quary = "SELECT `id`, `name`, `path` \n" +
                                   "FROM `symbols` \n" +
                                   "WHERE name = \""+selctdSymbol+"\";";

               PreparedStatement pst = con.prepareStatement(quary);
               ResultSet res = pst.executeQuery();


               while(res.next()){
                   String Path = res.getString(3);
                   symbol_id=res.getInt(1);
                   symbol_path = Path;
                   File file = new File("");
                   String projectPath = file.getAbsolutePath();

                   ImageIcon icon = new ImageIcon(projectPath+Path);
                   Image image = icon.getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                   icon = new ImageIcon(image);
                   imageArea.setIcon(icon);

               }
               con.close();
           }
           catch(Exception e){
               JOptionPane.showMessageDialog(rootPane, e);

           }
        }
        
    }//GEN-LAST:event_SymbolActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        AdminMenu menue = new AdminMenu();
        menue.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_BackBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCandidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCandidate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton BackBtn;
    private javax.swing.JTextField Cnd_name;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Nid;
    private javax.swing.JComboBox<String> Symbol;
    private javax.swing.JComboBox<String> elections;
    private javax.swing.JLabel imageArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel warn;
    // End of variables declaration//GEN-END:variables
}
